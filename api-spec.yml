openapi: 3.0.0
info:
  version: 1.0.0
  title: JSON Placeholder API
  description: See https://jsonplaceholder.typicode.com/

paths:
  /users:
    get:
      description: Returns all users
      tags:
        - users
      operationId: "getUsers"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UsersList"
    post:
      description: Creates a user
      tags:
        - users
      operationId: "createUser"
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{id}:
    get:
      description: Returns a user by id
      tags:
        - users
      operationId: "getUser"
      parameters:
        - name: id
          in: path
          required: true
          description: The user id
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    put:
      description: Update a user
      tags:
        - users
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: The user id.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /posts:
    get:
      description: Returns all posts
      tags:
        - posts
      operationId: "getPosts"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostsList"
    post:
      description: Creates a post
      tags:
        - posts
      operationId: "createPost"
      requestBody:
        description: Create a new post
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  /posts/{id}:
    get:
      description: Returns a post by id
      tags:
        - posts
      operationId: "getPost"
      parameters:
        - name: id
          in: path
          required: true
          description: The post id
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          description: Post not found
    put:
      description: Update a post
      tags:
        - posts
      operationId: updatePost
      parameters:
        - name: id
          in: path
          required: true
          description: The user id.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing post
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

components:
  schemas:
    UsersList:
      type: "array"
      items:
        $ref: "#/components/schemas/User"
    User:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
        website:
          type: "string"
        company:
          type: "object"
          properties:
            name:
              type: "string"
            catchPhrase:
              type: "string"
            bs:
              type: "string"
        address:
          type: "object"
          properties:
            street:
              type: "string"
            suite:
              type: "string"
            city:
              type: "string"
            zipcode:
              type: "string"
            geo:
              type: "object"
              properties:
                lat:
                  type: "string"
                lng:
                  type: "string"
    PostsList:
      type: "array"
      items:
        $ref: "#/components/schemas/Post"
    Post:
      type: "object"
      properties:
        id:
          type: "integer"
        userId:
          type: "integer"
        title:
          type: "string"
        body:
          type: "string"
